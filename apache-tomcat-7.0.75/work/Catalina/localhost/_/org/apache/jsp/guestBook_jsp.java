/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.75
 * Generated at: 2017-03-09 11:47:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class guestBook_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>用户留言板</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction validate() {\r\n");
      out.write("\t\tvar uname = document.getElementById(\"username\");\r\n");
      out.write("\t\tvar message = document.getElementById(\"message\");\r\n");
      out.write("\t\tif (uname.value == \"\") {\r\n");
      out.write("\t\t\talert(\"请填写您的名字！\");\r\n");
      out.write("\t\t\tuname.focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t} else if (message.value == \"\") {\r\n");
      out.write("\t\t\talert(\"请填写留言\");\r\n");
      out.write("\t\t\tmessage.focus();\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<p>请留言</p>\r\n");
      out.write("\t<form action=\"guestBook.jsp\" method=\"post\"\r\n");
      out.write("\t\tonsubmit=\"return validate();\">\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t\t输入您的名字：<input name=\"username\" id=\"username\" type=\"text\">\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t\t输入您的留言：\r\n");
      out.write("\t\t\t<textarea name=\"message\" id=\"message\" cols=\"50\" rows=\"3\"></textarea>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t\t<input type=\"submit\" value=\"提交留言\">\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<p>留言内容</p>\r\n");
      out.write("\t");

		//获取留言信息
		request.setCharacterEncoding("UTF-8");
		String username = request.getParameter("username");
		String message = request.getParameter("message");
		//从application域属性messageBook中获取留言本
		Vector<String> book = (Vector<String>) application
				.getAttribute("messageBook");
		if (book == null)//若留言本不存在则新创建一个
			book = new Vector<String>();
		//判断用户是否提交了留言，若已提交，则将提交信息加入留言本，存入application域属性中
		if (username != null && message != null) {
			String info = username + "#" + message;
			book.add(info);
			application.setAttribute("messageBook", book);
		}
		//遍历显示出所有的用户留言
		if (book.size() > 0) {
			for (String mess : book) {
				String[] arr = mess.split("#");
				out.print("<p>姓名：" + arr[0] + "<br>留言：" + arr[1] + "</p>");
			}
		} else {
			out.print("还没有留言！");
		}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
